worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
}

http {
    include /etc/nginx/mime.types;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen              80;
        listen              [::]:80;
        server_name         website.com www.website.com;

        location / {
            rewrite ^ https://website.com$request_uri? permanent;
        }
    }

    server {
        listen              80;
        listen              [::]:80;
        server_name         1.1.1.1; # replace IP
        return              301 https://website.com$request_uri;
    }

    server {
        listen                    443 ssl http2;
        listen                    [::]:443 ssl http2;
        server_name               website.com www.website.com;

        server_tokens             off;

        ssl_certificate           /etc/letsencrypt/live/website.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/website.com/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        charset                   utf-8;
        client_max_body_size      10M;
        access_log                /var/log/nginx/nginx_access.log;
        error_log                 /var/log/nginx/nginx_error.log;

        root /var/www/website.com/static;

        location / {
            try_files $uri @website;
        }

        location @website {
            proxy_pass           http://django:8000;
            add_header           X-Frame-Options "SAMEORIGIN" always;
            add_header           X-XSS-Protection "1; mode=block" always;
            add_header           X-Content-Type-Options "nosniff" always;
            add_header           Referrer-Policy "no-referrer-when-downgrade" always;
            add_header           Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        }

        location /static {
            alias /var/www/website.com/static;
            add_header Cache-Control public;
            expires max;
        }
    }
}
